!function(e,a){"object"==typeof exports&&"object"==typeof module?module.exports=a():"function"==typeof define&&define.amd?define("./dist/index",[],a):"object"==typeof exports?exports["./dist/index"]=a():e["./dist/index"]=a()}(global,(()=>(()=>{"use strict";var e={882:(e,a,t)=>{t.d(a,{h$:()=>m,Ln:()=>j,CB:()=>f,qb:()=>y});const o=require("koa");var r=t.n(o);const n=require("koa-logger");var s=t.n(n);const i=require("koa-router");var c=t.n(i);const d=require("koa-bodyparser");var p=t.n(d);const u=require("pythonic"),b=require("querystring");var l=t.n(b);const m=()=>{const e=new(r()),a=new(c());return e.use(s()()),e.use(((e,a)=>a().catch((a=>{console.dir(a),e.body=String(a),e.status=a.status||500})))),e.use(p()({onerror(e,a){a.throw(400,`cannot parse request body, ${JSON.stringify(e)}`)}})),e.use(a.routes()),{app:e,router:a}},y=e=>"[object Date]"===Object.prototype.toString.call(e)&&!isNaN(e.getTime());((e={})=>a=>(t,o)=>()=>{t in e||(e[t]=0),e[t]<a&&(o(),e[t]++)})()(1);const j=({url:e,params:a})=>{if(e.indexOf("/:")>0&&a){const t=e.slice(0,e.indexOf("/:"));let o=e.slice(e.indexOf("/:"));for(const[e,t]of(0,u.items)(a))o=o.replace(`:${e}`,t);return`${t}${o}`}return e},f=({url:e,query:a})=>(a&&""!==(a=l().stringify(a))&&(e+=`?${a}`),e)},837:e=>{e.exports=require("util")}},a={};function t(o){var r=a[o];if(void 0!==r)return r.exports;var n=a[o]={exports:{}};return e[o](n,n.exports,t),n.exports}t.n=e=>{var a=e&&e.__esModule?()=>e.default:()=>e;return t.d(a,{a}),a},t.d=(e,a)=>{for(var o in a)t.o(a,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:a[o]})},t.o=(e,a)=>Object.prototype.hasOwnProperty.call(e,a),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};return(()=>{t.r(o),t.d(o,{agenda:()=>g,app:()=>w,default:()=>T,jobsReady:()=>x,router:()=>h});var e=t(837);const a=require("agenda");var r=t.n(a);const n=require("../settings");var s=t.n(n),i=t(882);const c=require("request-promise");var d=t.n(c);const p=(e,a={})=>t=>{if(!t.name||e&&!t[e])throw new Error(`expected request body to match {name${e?`, ${e}`:""}}`);return{...a,...t}},u=(e,a)=>(t,o)=>o.countDocuments({name:t.name}).then((o=>{if(!e(o))throw new Error(a(t.name))})),b={alreadyExists:u((e=>e>0),(e=>`Did not find a job named "${e}"`)),notExists:u((e=>e<=0),(e=>`A job named "${e}" already exist`)),doNotAssert:()=>!0},l=async(e,a,t)=>{const{name:o,url:r,method:n,callback:c}=e;return t.define(o,((e,a)=>{const{attrs:{data:t}}=e;let o=(0,i.Ln)({url:r,params:t.params});o=(0,i.CB)({url:o,query:t.query});const p={method:n||"POST",uri:o,body:t.body,headers:t.headers||{},json:!0};Promise.race([new Promise(((e,a)=>setTimeout((()=>a(new Error("TimeOutError"))),s().timeout))),d()(p)]).catch((a=>(e.fail(`options: ${JSON.stringify(p)} message: ${a.message}`),{error:a.message}))).then((e=>{if(c)return d()({method:c.method||"POST",uri:c.url,headers:c.headers||{},body:{data:t,response:e},json:!0})})).catch((a=>e.fail(`failure in callback: ${a.message}`))).then((()=>a()))})),await a.countDocuments({name:o}).then((t=>t<1?a.insertOne(e):a.updateOne({name:o},{$set:e}))),"job defined"},m=({obj:e,pickProps:a})=>a.reduce(((a,t)=>e[t]?[...a,e[t]]:a),[]),y={now:{fn:e=>e.now.bind(e),message:"for now",getParams:e=>m({obj:e,pickProps:["name","data"]})},once:{fn:e=>e.schedule.bind(e),message:"for once",getParams:e=>{let a=parseInt(e.interval,10);return a=isNaN(a)?e.interval:a,a=new Date(a),a=(0,i.qb)(a)?a:e.interval,m({obj:{...e,time:a},pickProps:["time","name","data"]})}},every:{fn:e=>e.every.bind(e),message:"for repetition",getParams:e=>m({obj:e,pickProps:["interval","name","data","options"]})}},j=e=>async(a,t,o)=>(await e.fn(o)(...e.getParams(a)),`job scheduled ${e.message}`),f=(e,a)=>({check:e,fn:a}),v={create:f(p("url"),l),update:f(p(),l),delete:f(p(),(async(e,a,t)=>{const o=await t.cancel(e);return`removed ${(await a.remove(e)).result.n} job definitions and ${o} job instances.`})),cancel:f((e=>e),(async(e,a,t)=>`${await t.cancel(e)} jobs canceled`)),now:f(p(!1,{data:{body:{},params:{},query:{}}}),j(y.now)),once:f(p("interval",{data:{body:{},params:{},query:{}}}),j(y.once)),every:f(p("interval",{data:{body:{},params:{},query:{}}}),j(y.every))},{app:w,router:h}=(0,i.h$)(),g=new(r())({db:{address:s().agendaMongoUrl,collection:s().collection?s().collection:void 0},...s().agenda}),x=g._ready.then((async()=>{const a=g._mdb.collection(s().definitions);return a.toArray=()=>{const t=a.find();return(0,e.promisify)(t.toArray).bind(t)()},await a.toArray().then((e=>Promise.all(e.map((e=>l(e,a,g)))))),await g.start(),a})),q=(e,a,t=400)=>async(o,r)=>{s().appId&&o.request.headers["x-api-key"]!==s().appId&&o.throw(403,"Forbidden");const n=o.request.body||{};o.params.jobName&&(n.name=o.params.jobName);const i=await x;o.body=await(async(e,a,t,o,r)=>(e=await r.check(e),await o(e,a),r.fn(e,a,t)))(n,i,g,e,a).catch((e=>o.throw(t,e))),await r()},$=q(b.notExists,v.create),P=q(b.alreadyExists,v.delete),N=q(b.alreadyExists,v.update),O=q(b.alreadyExists,v.once),k=q(b.alreadyExists,v.every),E=q(b.alreadyExists,v.now),S=q(b.doNotAssert,v.cancel);h.get("/api/job",(async(e,a)=>{s().appId&&e.request.headers["x-api-key"]!==s().appId&&e.throw(403,"Forbidden"),e.body=await x.then((e=>e.toArray())),await a()})),h.post("/api/job",$),h.del("/api/job/:jobName",P),h.put("/api/job/:jobName",N),h.post("/api/job/once",O),h.post("/api/job/every",k),h.post("/api/job/now",E),h.post("/api/job/cancel",S);const A=(e,a=307)=>async(t,o)=>{t.status=a,t.redirect(e),await o()};h.get("/api/v1/job",A("/api/job")),h.post("/api/v1/job",A("/api/job")),h.del("/api/v1/job/:jobName",A("/api/job/:jobName")),h.put("/api/v1/job/:jobName",A("/api/job/:jobName")),h.post("/api/v1/job/once",A("/api/job/once")),h.post("/api/v1/job/every",A("/api/job/every")),h.post("/api/v1/job/now",A("/api/job/now")),h.post("/api/v1/job/cancel",A("/api/job/cancel"));const T=w})(),o})()));
//# sourceMappingURL=index.js.map