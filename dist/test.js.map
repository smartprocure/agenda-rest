{"version":3,"file":"./dist/test.js","mappings":"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","sources":["webpack://agenda-rest/webpack/universalModuleDefinition","webpack://agenda-rest/external commonjs \"agenda\"","webpack://agenda-rest/external commonjs \"../settings\"","webpack://agenda-rest/external commonjs \"request-promise\"","webpack://agenda-rest/./src/job.js","webpack://agenda-rest/./src/index.js","webpack://agenda-rest/external commonjs \"koa\"","webpack://agenda-rest/external commonjs \"koa-logger\"","webpack://agenda-rest/external commonjs \"koa-router\"","webpack://agenda-rest/external commonjs \"koa-bodyparser\"","webpack://agenda-rest/external commonjs \"pythonic\"","webpack://agenda-rest/external node-commonjs \"querystring\"","webpack://agenda-rest/./src/util.js","webpack://agenda-rest/external node-commonjs \"util\"","webpack://agenda-rest/webpack/bootstrap","webpack://agenda-rest/webpack/runtime/compat get default export","webpack://agenda-rest/webpack/runtime/define property getters","webpack://agenda-rest/webpack/runtime/hasOwnProperty shorthand","webpack://agenda-rest/webpack/runtime/make namespace object","webpack://agenda-rest/external commonjs \"ava\"","webpack://agenda-rest/external commonjs \"supertest\"","webpack://agenda-rest/./test.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"./dist/test\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"./dist/test\"] = factory();\n\telse\n\t\troot[\"./dist/test\"] = factory();\n})(global, () => {\nreturn ","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"agenda\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"../settings\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"request-promise\");","import rp from \"request-promise\";\nimport settings from \"../settings\";\nimport { isValidDate, buildUrlWithParams, buildUrlWithQuery } from \"./util\";\n\nconst getCheckJobFormatFunction = (jobProperty, defaultJob = {}) => (job) => {\n  if (!job.name || (jobProperty && !job[jobProperty])) {\n    throw new Error(\n      `expected request body to match {name${\n        jobProperty ? `, ${jobProperty}` : \"\"\n      }}`\n    );\n  }\n\n  return { ...defaultJob, ...job };\n};\n\nconst doNotCheck = (job) => job;\n\nconst getAssertFunction = (assertOnCount, errorOnName) => (job, jobs) =>\n  jobs.countDocuments({ name: job.name }).then((count) => {\n    if (!assertOnCount(count)) {\n      throw new Error(errorOnName(job.name));\n    }\n  });\n\nconst jobAssertions = {\n  alreadyExists: getAssertFunction(\n    (count) => count > 0,\n    (name) => `Did not find a job named \"${name}\"`\n  ),\n  notExists: getAssertFunction(\n    (count) => count <= 0,\n    (name) => `A job named \"${name}\" already exist`\n  ),\n  doNotAssert: () => true,\n};\n\nconst defineJob = async (job, jobs, agenda) => {\n  const { name, url, method, callback } = job;\n  agenda.define(name, (job, done) => {\n    const {\n      attrs: { data },\n    } = job;\n    let uri = buildUrlWithParams({ url, params: data.params });\n    uri = buildUrlWithQuery({ url: uri, query: data.query });\n\n    const options = {\n      method: method || \"POST\",\n      uri,\n      body: data.body,\n      headers: data.headers || {},\n      json: true,\n    };\n\n    // Error if no response in timeout\n    Promise.race([\n      new Promise((resolve, reject) =>\n        setTimeout(() => reject(new Error(\"TimeOutError\")), settings.timeout)\n      ),\n      rp(options),\n    ])\n      .catch((err) => {\n        job.fail(`options: ${JSON.stringify(options)} message: ${err.message}`);\n        return { error: err.message };\n      })\n      .then((result) => {\n        if (callback) {\n          return rp({\n            method: callback.method || \"POST\",\n            uri: callback.url,\n            headers: callback.headers || {},\n            body: { data, response: result },\n            json: true,\n          });\n        }\n      })\n      .catch((err) => job.fail(`failure in callback: ${err.message}`))\n      .then(() => done());\n  });\n\n  await jobs\n    .countDocuments({ name })\n    .then((count) =>\n      count < 1 ? jobs.insertOne(job) : jobs.updateOne({ name }, { $set: job })\n    );\n\n  return \"job defined\";\n};\n\nconst deleteJob = async (job, jobs, agenda) => {\n  const numRemoved = await agenda.cancel(job);\n  const obj = await jobs.remove(job);\n  return `removed ${obj.result.n} job definitions and ${numRemoved} job instances.`;\n};\n\nconst cancelJob = async (job, jobs, agenda) => {\n  const numRemoved = await agenda.cancel(job);\n  return `${numRemoved} jobs canceled`;\n};\n\nconst getDefaultJobForSchedule = () => ({\n  data: {\n    body: {},\n    params: {},\n    query: {},\n  },\n});\n\nconst pickValues = ({ obj, pickProps }) =>\n  pickProps.reduce(\n    (props, prop) => (obj[prop] ? [...props, obj[prop]] : props),\n    []\n  );\nconst scheduleTypes = {\n  now: {\n    fn: (agenda) => agenda.now.bind(agenda),\n    message: \"for now\",\n    getParams: (job) => pickValues({ obj: job, pickProps: [\"name\", \"data\"] }),\n  },\n  once: {\n    fn: (agenda) => agenda.schedule.bind(agenda),\n    message: \"for once\",\n    getParams: (job) => {\n      // Check if interval is timestamp\n      let time = parseInt(job.interval, 10);\n      time = isNaN(time) ? job.interval : time;\n      // Check if interval is date\n      time = new Date(time);\n      time = isValidDate(time) ? time : job.interval;\n      return pickValues({\n        obj: { ...job, time },\n        pickProps: [\"time\", \"name\", \"data\"],\n      });\n    },\n  },\n  every: {\n    fn: (agenda) => agenda.every.bind(agenda),\n    message: \"for repetition\",\n    getParams: (job) =>\n      pickValues({\n        obj: job,\n        pickProps: [\"interval\", \"name\", \"data\", \"options\"],\n      }),\n  },\n};\n\nconst getScheduleJobFunction = (scheduleType) => async (job, jobs, agenda) => {\n  await scheduleType.fn(agenda)(...scheduleType.getParams(job));\n  return `job scheduled ${scheduleType.message}`;\n};\n\nconst getJobOperation = (checkFunction, jobFunction) => ({\n  check: checkFunction,\n  fn: jobFunction,\n});\n\nconst jobOperations = {\n  create: getJobOperation(getCheckJobFormatFunction(\"url\"), defineJob),\n  update: getJobOperation(getCheckJobFormatFunction(), defineJob),\n  delete: getJobOperation(getCheckJobFormatFunction(), deleteJob),\n  cancel: getJobOperation(doNotCheck, cancelJob),\n  now: getJobOperation(\n    getCheckJobFormatFunction(false, getDefaultJobForSchedule()),\n    getScheduleJobFunction(scheduleTypes.now)\n  ),\n  once: getJobOperation(\n    getCheckJobFormatFunction(\"interval\", getDefaultJobForSchedule()),\n    getScheduleJobFunction(scheduleTypes.once)\n  ),\n  every: getJobOperation(\n    getCheckJobFormatFunction(\"interval\", getDefaultJobForSchedule()),\n    getScheduleJobFunction(scheduleTypes.every)\n  ),\n};\n\nconst promiseJobOperation = async (\n  job,\n  jobs,\n  agenda,\n  jobAssertion,\n  jobOperation\n) => {\n  job = await jobOperation.check(job);\n  await jobAssertion(job, jobs);\n  return jobOperation.fn(job, jobs, agenda);\n};\n\nexport { promiseJobOperation, jobOperations, jobAssertions, defineJob };\n","import { promisify } from \"util\";\nimport Agenda from \"agenda\";\nimport settings from \"../settings\";\nimport { bootstrapKoaApp } from \"./util\";\nimport {\n  defineJob,\n  jobOperations,\n  jobAssertions,\n  promiseJobOperation,\n} from \"./job\";\n\nconst { app, router } = bootstrapKoaApp();\n\nconst agenda = new Agenda({\n  db: {\n    address: settings.agendaMongoUrl,\n    collection: settings.collection ? settings.collection : undefined,\n  },\n  ...settings.agenda,\n});\n\nconst jobsReady = agenda._ready.then(async () => {\n  const jobs = agenda._mdb.collection(settings.definitions);\n  jobs.toArray = () => {\n    const jobsCursor = jobs.find();\n    return promisify(jobsCursor.toArray).bind(jobsCursor)();\n  };\n\n  await jobs\n    .toArray()\n    .then((jobsArray) =>\n      Promise.all(jobsArray.map((job) => defineJob(job, jobs, agenda)))\n    );\n\n  await agenda.start();\n  return jobs;\n});\n\nconst getJobMiddleware = (\n  jobAssertion,\n  jobOperation,\n  errorCode = 400\n) => async (ctx, next) => {\n  if (settings.appId && ctx.request.headers[\"x-api-key\"] !== settings.appId) {\n    ctx.throw(403, \"Forbidden\");\n  }\n\n  const job = ctx.request.body || {};\n  if (ctx.params.jobName) {\n    job.name = ctx.params.jobName;\n  }\n\n  const jobs = await jobsReady;\n  ctx.body = await promiseJobOperation(\n    job,\n    jobs,\n    agenda,\n    jobAssertion,\n    jobOperation\n  ).catch((error) => ctx.throw(errorCode, error));\n  await next();\n};\n\nconst listJobs = async (ctx, next) => {\n  if (settings.appId && ctx.request.headers[\"x-api-key\"] !== settings.appId) {\n    ctx.throw(403, \"Forbidden\");\n  }\n\n  ctx.body = await jobsReady.then((jobs) => jobs.toArray());\n  await next();\n};\n\nconst createJob = getJobMiddleware(\n  jobAssertions.notExists,\n  jobOperations.create\n);\nconst removeJob = getJobMiddleware(\n  jobAssertions.alreadyExists,\n  jobOperations.delete\n);\nconst updateJob = getJobMiddleware(\n  jobAssertions.alreadyExists,\n  jobOperations.update\n);\nconst runJobOnce = getJobMiddleware(\n  jobAssertions.alreadyExists,\n  jobOperations.once\n);\nconst runJobEvery = getJobMiddleware(\n  jobAssertions.alreadyExists,\n  jobOperations.every\n);\nconst runJobNow = getJobMiddleware(\n  jobAssertions.alreadyExists,\n  jobOperations.now\n);\nconst cancelJobs = getJobMiddleware(\n  jobAssertions.doNotAssert,\n  jobOperations.cancel\n);\n\n// Latest\nrouter.get(\"/api/job\", listJobs);\nrouter.post(\"/api/job\", createJob);\nrouter.del(\"/api/job/:jobName\", removeJob);\nrouter.put(\"/api/job/:jobName\", updateJob);\nrouter.post(\"/api/job/once\", runJobOnce);\nrouter.post(\"/api/job/every\", runJobEvery);\nrouter.post(\"/api/job/now\", runJobNow);\nrouter.post(\"/api/job/cancel\", cancelJobs);\n\nconst redirect = (route, status = 307) => async (ctx, next) => {\n  ctx.status = status;\n  ctx.redirect(route);\n  await next();\n};\n\n// V1\nrouter.get(\"/api/v1/job\", redirect(\"/api/job\"));\nrouter.post(\"/api/v1/job\", redirect(\"/api/job\"));\nrouter.del(\"/api/v1/job/:jobName\", redirect(\"/api/job/:jobName\"));\nrouter.put(\"/api/v1/job/:jobName\", redirect(\"/api/job/:jobName\"));\nrouter.post(\"/api/v1/job/once\", redirect(\"/api/job/once\"));\nrouter.post(\"/api/v1/job/every\", redirect(\"/api/job/every\"));\nrouter.post(\"/api/v1/job/now\", redirect(\"/api/job/now\"));\nrouter.post(\"/api/v1/job/cancel\", redirect(\"/api/job/cancel\"));\n\nexport { app, router, agenda, jobsReady };\nexport default app;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"koa\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"koa-logger\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"koa-router\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"koa-bodyparser\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"pythonic\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"querystring\");","import Koa from \"koa\";\nimport logger from \"koa-logger\";\nimport Router from \"koa-router\";\nimport bodyParser from \"koa-bodyparser\";\nimport { items } from \"pythonic\";\nimport querystring from \"querystring\";\n\nconst bootstrapKoaApp = () => {\n  const app = new Koa();\n  const router = new Router();\n  app.use(logger());\n  app.use((ctx, next) =>\n    next().catch((error) => {\n      console.dir(error);\n      ctx.body = String(error);\n      ctx.status = error.status || 500;\n    })\n  );\n  app.use(\n    bodyParser({\n      onerror(error, ctx) {\n        ctx.throw(400, `cannot parse request body, ${JSON.stringify(error)}`);\n      },\n    })\n  );\n  app.use(router.routes());\n  return { app, router };\n};\n\nconst isValidDate = (date) =>\n  Object.prototype.toString.call(date) === \"[object Date]\" &&\n  !isNaN(date.getTime());\n\nconst repeatPerKey = (keys = {}) => (count) => (key, fn) => () => {\n  if (!(key in keys)) {\n    keys[key] = 0;\n  }\n\n  if (keys[key] < count) {\n    fn();\n    keys[key]++;\n  }\n};\n\nconst oncePerKey = repeatPerKey()(1);\n\nclass AsyncCounter {\n  constructor(countTimes) {\n    let currentCount = 0;\n    this.countTimes = countTimes;\n    this.ready = new Promise((resolveReady) => {\n      this.finished = new Promise((resolveFinished) => {\n        const count = () => {\n          currentCount++;\n          if (currentCount === countTimes) {\n            resolveFinished();\n          }\n\n          return currentCount;\n        };\n\n        this.count = () => this.ready.then(() => count());\n        resolveReady();\n      });\n    });\n  }\n}\n\n// http://example.com:8888/foo/:param1/:param2\n// =>\n// http://example.com:8888/foo/value1/value2\nconst buildUrlWithParams = ({ url, params }) => {\n  if (url.indexOf(\"/:\") > 0 && params) {\n    const protoDomain = url.slice(0, url.indexOf(\"/:\"));\n    let path = url.slice(url.indexOf(\"/:\"));\n    for (const [key, value] of items(params)) {\n      path = path.replace(`:${key}`, value);\n    }\n\n    return `${protoDomain}${path}`;\n  }\n\n  return url;\n};\n\n// http://example.com/foo\n// =>\n// http://example.com/foo?query1=value1&query2=value2\nconst buildUrlWithQuery = ({ url, query }) => {\n  if (query) {\n    query = querystring.stringify(query);\n    if (query !== \"\") {\n      url += `?${query}`;\n    }\n  }\n\n  return url;\n};\n\nexport {\n  bootstrapKoaApp,\n  isValidDate,\n  oncePerKey,\n  AsyncCounter,\n  buildUrlWithParams,\n  buildUrlWithQuery,\n};\n","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"ava\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"supertest\");","import { promisify } from \"util\";\nimport test from \"ava\";\nimport request from \"supertest\";\nimport {\n  bootstrapKoaApp,\n  oncePerKey,\n  AsyncCounter,\n  buildUrlWithParams,\n  buildUrlWithQuery,\n} from \"./src/util\";\n\nconst agendaAppUrl = \"http://localhost:4041\";\nconst testAppUrl = \"http://localhost:4042\";\nconst { app: testApp, router: testAppRouter } = bootstrapKoaApp();\nconst getTestAppUrl = (path) => (path ? `${testAppUrl}${path}` : testAppUrl);\n\nconst agendaAppRequest = request(agendaAppUrl);\n\nconst bootstrapApp = async () => {\n  const { app, jobsReady } = require(\"./src\");\n  await promisify(app.listen)\n    .bind(app)(4041)\n    .then(() => console.log(\"agenda-rest app running\"));\n\n  await promisify(testApp.listen)\n    .bind(testApp)(4042)\n    .then(() => console.log(\"test app running\"));\n  await jobsReady;\n};\n\ntest.before(() => bootstrapApp());\n\ntest.serial(\"POST /api/job fails without content\", async (t) => {\n  const res = await agendaAppRequest.post(\"/api/job\").send();\n\n  t.is(res.status, 400);\n});\n\ntest.serial(\"POST /api/job succeeds when a job is specified\", async (t) => {\n  const res = await agendaAppRequest\n    .post(\"/api/job\")\n    .send({ name: \"foo\", url: getTestAppUrl(\"/fooWrong\") });\n\n  t.is(res.status, 200);\n});\n\ntest.serial(\"PUT /api/job fails when the job does not exists\", async (t) => {\n  const res = await agendaAppRequest\n    .put(\"/api/job/fooWrong\")\n    .send({ url: getTestAppUrl(\"/foo\") });\n\n  t.is(res.status, 400);\n});\n\ntest.serial(\"PUT /api/job succeeds when the job exists\", async (t) => {\n  const res = await agendaAppRequest\n    .put(\"/api/job/foo\")\n    .send({ url: getTestAppUrl(\"/foo\") });\n\n  t.is(res.status, 200);\n});\n\nconst fooProps = {};\n\nconst defineFooEndpoint = (\n  route,\n  message,\n  countTimes = 1,\n  statusCode = 200\n) => {\n  const counter = new AsyncCounter(countTimes);\n  fooProps.counter = counter;\n  fooProps.message = message;\n  fooProps.statusCode = statusCode;\n\n  const define = oncePerKey(route, () =>\n    testAppRouter.post(route, async (ctx, next) => {\n      ctx.body = fooProps.message;\n      ctx.status = fooProps.statusCode;\n      console.log(\n        `${fooProps.message}! ${await fooProps.counter.count()} of ${\n          fooProps.counter.countTimes\n        }`\n      );\n      await next();\n    })\n  );\n  define();\n  return counter;\n};\n\n/* TODO\ntestAppRouter.post('/foo/:fooParam', async (ctx, next) => {\n  console.log('foo with params invoked!');\n  console.log(ctx.params);\n  console.log(ctx.request.body);\n  ctx.body = 'foo with params success';\n  ctx.status = 200;\n  await next();\n});\n\ntestAppRouter.post('/foo/cb', async (ctx, next) => {\n  console.log('foo callback invoked!');\n  ctx.body = 'foo callback success';\n  ctx.status = 200;\n  await next();\n});\n*/\n\ntest.serial(\n  \"POST /api/job/now with existing foo definition invokes the foo endpoint\",\n  async (t) => {\n    const counter = defineFooEndpoint(\"/foo\", \"foo now invoked\");\n    const res = await agendaAppRequest\n      .post(\"/api/job/now\")\n      .send({ name: \"foo\" });\n\n    t.is(res.text, \"job scheduled for now\");\n\n    await counter.finished;\n  }\n);\n\ntest.serial(\n  \"POST /api/job/every with existing foo definition invokes the foo endpoint\",\n  async (t) => {\n    const counter = defineFooEndpoint(\"/foo\", \"foo every invoked\", 3);\n    const res = await agendaAppRequest\n      .post(\"/api/job/every\")\n      .send({ name: \"foo\", interval: \"2 seconds\" });\n\n    t.is(res.text, \"job scheduled for repetition\");\n\n    await counter.finished;\n  }\n);\n\ntest.serial(\n  \"POST /api/job/once with existing foo definition invokes the foo endpoint\",\n  async (t) => {\n    const counter = defineFooEndpoint(\"/foo\", \"foo once invoked\");\n    const res = await agendaAppRequest\n      .post(\"/api/job/once\")\n      .send({ name: \"foo\", interval: new Date().getTime() + 10000 });\n    // .send({name: 'foo', interval: 'in 10 seconds'});\n\n    t.is(res.text, \"job scheduled for once\");\n\n    await counter.finished;\n  }\n);\n\ntest.serial(\"DELETE /api/job succeeds when a job is defined\", async (t) => {\n  const res = await agendaAppRequest.delete(\"/api/job/foo\");\n\n  t.is(res.status, 200);\n});\n\ntest(\"Build URL with parameters.\", (t) => {\n  t.is(\n    buildUrlWithParams({\n      url: \"http://example.com:8888/foo/:param1/:param2\",\n      params: { param1: \"value1\", param2: \"value2\" },\n    }),\n    \"http://example.com:8888/foo/value1/value2\"\n  );\n});\n\ntest(\"Build URL with query.\", (t) => {\n  t.is(\n    buildUrlWithQuery({\n      url: \"http://example.com/foo\",\n      query: { query1: \"value1\", query2: \"value2\" },\n    }),\n    \"http://example.com/foo?query1=value1&query2=value2\"\n  );\n});\n"],"names":["root","factory","exports","module","define","amd","global","require","getCheckJobFormatFunction","jobProperty","defaultJob","job","name","Error","getAssertFunction","assertOnCount","errorOnName","jobs","countDocuments","then","count","jobAssertions","alreadyExists","notExists","doNotAssert","defineJob","async","agenda","url","method","callback","done","attrs","data","uri","buildUrlWithParams","params","buildUrlWithQuery","query","options","body","headers","json","Promise","race","resolve","reject","setTimeout","settings","rp","catch","err","fail","JSON","stringify","message","error","result","response","insertOne","updateOne","$set","pickValues","obj","pickProps","reduce","props","prop","scheduleTypes","now","fn","bind","getParams","once","schedule","time","parseInt","interval","isNaN","Date","isValidDate","every","getScheduleJobFunction","scheduleType","getJobOperation","checkFunction","jobFunction","check","jobOperations","create","update","delete","numRemoved","cancel","remove","n","app","router","bootstrapKoaApp","Agenda","db","address","collection","undefined","jobsReady","_ready","_mdb","toArray","jobsCursor","find","promisify","jobsArray","all","map","start","getJobMiddleware","jobAssertion","jobOperation","errorCode","ctx","next","request","throw","jobName","promiseJobOperation","createJob","removeJob","updateJob","runJobOnce","runJobEvery","runJobNow","cancelJobs","get","post","del","put","redirect","route","status","Koa","Router","use","logger","console","dir","String","bodyParser","onerror","routes","date","Object","prototype","toString","call","getTime","oncePerKey","repeatPerKey","keys","key","AsyncCounter","constructor","countTimes","currentCount","this","ready","resolveReady","finished","resolveFinished","indexOf","protoDomain","slice","path","value","items","replace","querystring","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","a","definition","o","defineProperty","enumerable","hasOwnProperty","r","Symbol","toStringTag","testAppUrl","testApp","testAppRouter","getTestAppUrl","agendaAppRequest","test","listen","log","bootstrapApp","res","send","t","is","fooProps","defineFooEndpoint","statusCode","counter","text","param1","param2","query1","query2"],"sourceRoot":""}